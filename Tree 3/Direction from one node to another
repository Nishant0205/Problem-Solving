class Solution {
    bool trace_path(TreeNode* A,int DV, string& ans)
    {
        if(A == NULL)
            return 0;
        if(A->val == DV)
            return 1;
        else if(trace_path(A->left,DV,ans))
        {
            ans.insert(0,"L");
            return 1;
        }
        else if(trace_path(A->right,DV,ans))
        {
            ans.insert(0,"R");
            return 1;
        }
        return 0;
    }
public:
    string getDirections(TreeNode* root, int startValue, int destValue) {
        string ans;
        string source; 
        trace_path(root,startValue,source);
        string destination;
        trace_path(root,destValue,destination);
        if(source == "")
            return destination;
        int i=0, j=0;
        while(i<source.length() && j<destination.length())
        {
            if(source[i] != destination[i])
                break;
            i++;
            j++;
        }
        while(i<source.length())
        {
            ans += 'U';
            i++;
        }
        while(j<destination.length())
        {
            ans += destination[j];
            j++;
        }
        return ans;
    }
};
