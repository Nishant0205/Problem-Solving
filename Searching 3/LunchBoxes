#include <iostream>
#include<vector>
#include<map>
#include<algorithm>
using namespace std;

bool possibleToMakeMixLunchBoxes(map<int,int> freqArr, int noOfLunchBoxes, int maxItem)
{
    int totalItemPerLunch = 0;
    for(auto freq : freqArr)
    {
        int currFoodItemPerLunchBox = freq.second/ noOfLunchBoxes;
        totalItemPerLunch += currFoodItemPerLunchBox;
    }
    return totalItemPerLunch >= maxItem;
}

int maxLunchBoxes(vector<int> foodItems, int maxItem)
{
    map<int,int> freqArr;
    int high = -1;
    for(auto item : foodItems)
    {
        freqArr[item]++;
        if(freqArr[item] > high )
            high = freqArr[item];
    }
    int low = 0 ;
    int ans = 0;
    while(low <= high)
    {
        int mid = high - (high - low)/2;
        if(possibleToMakeMixLunchBoxes(freqArr,mid,maxItem))
        {
            ans = mid;
            low = mid + 1;
        }
        else
            high = mid-1;
    }
    return ans;
}

int main() {
    // Write C++ code here
    int n;
    cin>>n;
    vector<int> v(n);
    for(int i=0; i<n; i++)
        cin>>v[i];
    int m;
    cin>>m;
    cout<<maxLunchBoxes(v,m);
    return 0;
}
