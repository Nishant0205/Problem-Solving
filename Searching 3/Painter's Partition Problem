bool canAllocatePainterWill(vector<int>& boards, int mid, int nopainter)
{
    int sum=0,totalpainter = 0;
    for(auto board: boards)
    {
        sum += board;
        if(sum>mid)
        {
            totalpainter++;
            sum = board;
        }
    }
    totalpainter++;
    return (totalpainter <= nopainter);
}
int findLargestMinDistance(vector<int> &boards, int k)
{
    int low = *max_element(boards.begin(),boards.end());
    int high=0;
    int ans = low;
    for(int i=0; i<boards.size(); i++)
        high+=boards[i];
    //accumulate(boards.begin(),boards.size(),high);
    while(low<=high)
    {
        int mid = high - (high - low)/2;
        if(canAllocatePainterWill(boards, mid, k))
        {
            ans = mid;
            high = mid -1;
        }
        else
            low = mid + 1;
    }
    return ans;
}
