class Solution{
    bool trace_path(Node* A,int DV, string& ans)
    {
        if(A == NULL)
            return 0;
        if(A->data == DV)
            return 1;
        else if(trace_path(A->left,DV,ans))
        {
            ans.insert(0,"L");
            return 1;
        }
        else if(trace_path(A->right,DV,ans))
        {
            ans.insert(0,"R");
            return 1;
        }
        return 0;
    }
    public:
    /* Should return minimum distance between a and b
    in a tree with given root*/
    int findDist(Node* root, int a, int b) {
        // Your code here
        int ans=0;
        string source; 
        trace_path(root,a,source);
        string destination;
        trace_path(root,b,destination);
        if(source == "")
            return destination.length();
        int i=0, j=0;
        while(i<source.length() && j<destination.length())
        {
            if(source[i] != destination[i])
                break;
            i++;
            j++;
        }
        while(i<source.length())
        {
            ans++;
            i++;
        }
        while(j<destination.length())
        {
            ans++;
            j++;
        }
        return ans;
    }
};
