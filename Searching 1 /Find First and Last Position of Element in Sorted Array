class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int beg=0,t=0,x,y;
        int end=nums.size()-1;
        while(beg<=end)
        {
            int mid=beg+(end-beg)/2;
            if(nums[mid]==target)
            {
                t=1;
                break;
            }
            else if(nums[mid]>target)
            {
                end=mid-1;
            }
            else if(nums[mid]<target)
            {
                beg=mid+1;
            }
        }
        if(t==1)
        {
            x=lower_bound(nums.begin(),nums.end(),target)-nums.begin();
            y=upper_bound(nums.begin(),nums.end(),target)-nums.begin()-1;
        }
        else
        {
            return {-1,-1};
        }
        return {x,y};/*
        int x,y;
        if(binary_search (nums.begin(), nums.end(), target))
        {
            x = lower_bound(nums.begin(), nums.end(), target) - nums.begin();
            y = upper_bound(nums.begin(), nums.end(), target) - nums.begin()-1;
        }
        else 
        {
            return{-1,-1};
        }
        return {x,y};*/
    }
};
